@startuml Coffee Shop Flow
!theme aws-orange

title Quick Coffee Order Flow

start

:Welcome;
note right: Welcome message with menu options

package "match @reply.text" as Welcome_match {
  :Order Coffee;
  :View Menu;
  :Store Hours;
  :default;
}

Welcome --> Welcome_match
Welcome_match --> ChooseSize : Order Coffee
Welcome_match --> ShowMenu : View Menu
Welcome_match --> StoreInfo : Store Hours
Welcome_match ..> Welcome : default

:ChooseSize;
note right: Select coffee size

package "match @reply.text" as ChooseSize_match {
  :Small ($3.50);
  :Medium ($4.50);
  :Large ($5.50);
  :default;
}

ChooseSize --> ChooseSize_match
ChooseSize_match --> ChooseDrink : "Small\nsize=small, price=$3.50"
ChooseSize_match --> ChooseDrink : "Medium\nsize=medium, price=$4.50"
ChooseSize_match --> ChooseDrink : "Large\nsize=large, price=$5.50"
ChooseSize_match ..> InvalidOption : "default\nproperty=size, next=ChooseSize"

:ChooseDrink;
note right: Select drink type

package "match @reply.text" as ChooseDrink_match {
  :Espresso;
  :Cappuccino;
  :Latte;
  :Americano;
  :default;
}

ChooseDrink --> ChooseDrink_match
ChooseDrink_match --> Customize : "Espresso\ndrink=espresso"
ChooseDrink_match --> Customize : "Cappuccino\ndrink=cappuccino"
ChooseDrink_match --> Customize : "Latte\ndrink=latte"
ChooseDrink_match --> Customize : "Americano\ndrink=americano"
ChooseDrink_match ..> InvalidOption : "default\nproperty=drink, next=ChooseDrink"

:Customize;
note right: Select milk type

package "match @reply.text" as Customize_match {
  :Regular;
  :Skim;
  :Soy (+$0.60);
  :Oat (+$0.60);
  :No Milk;
  :default;
}

Customize --> Customize_match
Customize_match --> ConfirmOrder : "Regular\nmilk=regular"
Customize_match --> ConfirmOrder : "Skim\nmilk=skim"
Customize_match --> ConfirmOrder : "Soy\nmilk=soy, extraCharge=$0.60"
Customize_match --> ConfirmOrder : "Oat\nmilk=oat, extraCharge=$0.60"
Customize_match --> ConfirmOrder : "No Milk\nmilk=none"
Customize_match ..> InvalidOption : "default\nproperty=milk, next=Customize"

:ConfirmOrder;
note right: Confirm or cancel order

package "match @reply.text" as ConfirmOrder_match {
  :Confirm;
  :Cancel;
  :default;
}

ConfirmOrder --> ConfirmOrder_match
ConfirmOrder_match --> ProcessPayment : Confirm
ConfirmOrder_match --> OrderCancelled : Cancel
ConfirmOrder_match ..> ConfirmOrder : default

:ProcessPayment;
--> OrderComplete;

:OrderComplete;
--> ThankYou;

:ThankYou;
--> ShowMenu;

:ShowMenu;
--> Welcome;

:OrderCancelled;
--> ShowMenu;

:StoreInfo;
--> Welcome;

:InvalidOption;
note right: Returns to state specified in 'next' context
--> @next;

stop

legend right
  |= Symbol |= Meaning |
  | --> | Solid arrow (normal flow) |
  | ..> | Dashed arrow (default case) |
  | package | Match block with options |
endlegend

@enduml