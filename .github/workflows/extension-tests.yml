name: Extension Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/extension/**'
      - 'packages/parser/**'
      - 'packages/language-service/**'
      - '.github/workflows/extension-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/extension/**'
      - 'packages/parser/**'
      - 'packages/language-service/**'
      - '.github/workflows/extension-tests.yml'

jobs:
  test:
    name: VS Code Extension Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: |
        npm install
        npm run build:parser
        
    - name: Build parser native bindings
      working-directory: packages/parser
      run: |
        npm run build-native
        npm run build-wasm
        
    - name: Build extension
      working-directory: apps/extension
      run: npm run build
      
    - name: Run server tests
      working-directory: apps/extension/server
      run: npm test
      
    - name: Run client unit tests
      working-directory: apps/extension/client
      run: npm test
      
    - name: Run integration tests (Linux)
      if: runner.os == 'Linux'
      working-directory: apps/extension
      run: |
        export DISPLAY=:99.0
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        npm run test:integration
        
    - name: Run integration tests (non-Linux)
      if: runner.os != 'Linux'
      working-directory: apps/extension
      run: npm run test:integration